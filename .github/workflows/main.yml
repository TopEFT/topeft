name: CI

on:
  push:
  schedule:
    - cron: '0 1 * * *' # Test every day at 1AM
  
jobs:

  # Based on https://github.com/py-actions/flake8#quick-start
  flake8-lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Check out source repository
        uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v1
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          ignore: "E201,E202,E203,E221,E226,E225,E227,E228,E231,E241,E261,E265,E302,E303,E501,E701,E714"
          # E201 whitespace after '('
          # E202 whitespace before ')'
          # E203 whitespace before ':'
          # E221 multiple spaces before operator
          # E225 missing whitespace around operator
          # E226 missing whitespace around arithmetic operator
          # E227 missing whitespace around bitwise or shift operator
          # E228 missing whitespace around modulo operator
          # E231 missing whitespace after ','
          # E241 multiple spaces after ','
          # E261 at least two spaces before inline comment
          # E265 block comment should start with '# '
          # E302 expected 2 blank lines, found 1
          # E303 too many blank lines (3)
          # E501 line too long
          # E701 multiple statements on one line (colon)
          # E714 test for object identity should be 'is not'

  Full_Analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Add conda to system path
        run: |
          echo $CONDA/bin >> $GITHUB_PATH 

      - name: Install dependencies
        run: |
          conda config --set channel_priority strict
          conda config --add channels conda-forge
          conda env create -f environment.yml -n coffea-env

      - name: Conda list
        run: |
          conda list -n coffea-env

      - name: Install topcoffea package
        run: |
          conda run -n coffea-env pip install -e .

      - name: Download root files
        run: |
          wget --no-verbose http://www.crc.nd.edu/~kmohrman/files/root_files/for_ci/ttHJet_UL17_R1B14_NAOD-00000_10194_NDSkim.root

      - name: Pytest setup
        run: |
          conda install -y -n coffea-env -c conda-forge pytest pytest-cov root_base
          mkdir histos

      - name: Test unit
        run: |
          conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_unit.py

      - name: Test histEFT
        run: |
          conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_HistEFT_add.py

      - name: Test utils
        run: |
          conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_utils.py

      - name: Test update json
        run: |
          conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_update_json.py

      - name: Test make 1d quad plots
        run: |
          conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_make_1d_quad_plots.py 

      - name: Run processors over test files with futures executor
        run: |
          conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_futures.py

      - name: Get yields 
        run: |
          conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append -k test_make_yields_after_processor

      - name: Compare yields
        run: |
          conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append -k test_compare_yields_after_processor

      - name: Run processors over test files with workqueue executor
        run: |
          conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_workqueue.py


      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          verbose: true
